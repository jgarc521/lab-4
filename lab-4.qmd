---
title: "Lab 4"
format: 
  dashboard:
    theme: flatly
    orientation: rows
    nav-buttons: 
      - icon: github
        href: https://github.com/jgarc521/lab-4
      - icon: envelope
        href: "mailto:jgarc521@calpoly.edu"
server: shiny
logo: wellcome-logos/wellcome-logo-black.jpg
logo-alt: Wellcome Logo
embed-resources: true
---

# Sidebar {.sidebar}

```{r}
sliderInput("top_n", "Top N Countries", min = 1, max = 130, value = 30, step = 1)

br()
selectInput(
  "stat_summary", 
  "Summary Statistic", 
  choices = c("Mean", "Median", "Mode"),
  selected = "Mean"
)

```

```{r}
#| context: setup
library(tidyverse)
library(wesanderson)
library(leaflet)
library(rnaturalearth)
library(plotly)
library(shiny)

# read in data
map_data <- readRDS("map_data.rds")
full_data <- read_csv("full_data.csv")

science_pct <- full_data |>
  mutate(country = if_else(country == "United States", "United States of America", country)) |>
  group_by(country) |>
  summarise(
    total_strong = sum(Q1 %in% c(1, 2), na.rm = TRUE),
    total = n(),
    percent_strong = total_strong / total * 100
  )

world <- ne_countries(type = "countries", scale = "small")

map_data <- world |>
  left_join(science_pct, by = c("name" = "country"))
```

# Percieved Knowledge Level of Science

## Summary {height="25%"}

::: card
### **ðŸŒŽ Quick Insight**

```{r}
uiOutput("insight_text")
```
:::

## Plots {.tabset}

### **By Country**

```{r}
leafletOutput("science_map", height = "600px")
```

```{r}
#| context: server
output$science_map <- renderLeaflet({
  req(input$top_n)
  n <- input$top_n

  data <- map_data |>
    filter(!is.na(percent_strong)) |>
    arrange(desc(percent_strong))

  # keep top n countries
  top_countries <- data$name[1:n]

  # set NA
  map_data$percent_strong <- ifelse(map_data$name %in% top_countries, map_data$percent_strong, NA)

  pal <- colorNumeric("YlGnBu", domain = map_data$percent_strong, na.color = "white")

  leaflet(map_data) |>
    addTiles() |>
    addPolygons(
      stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
      color = ~pal(percent_strong),
      label = ~paste0(name, ": ", round(percent_strong, 1), "%")
    ) |>
    addLegend(pal = pal, values = map_data$percent_strong,
              title = "Knowledge Level (%)", position = "bottomright") |>
    setView(lng = 0, lat = 0, zoom = 2)
})

```

```{r}
#| context: server
output$insight_text <- renderUI({
  req(input$stat_summary)

  # age groups
  age_data <- full_data |>
    filter(!is.na(Age), Q1 %in% c(1, 2, 3, 4)) |>
    mutate(
      age_group = case_when(
        Age >= 15 & Age <= 29 ~ "15â€“29",
        Age >= 30 & Age <= 49 ~ "30â€“49",
        Age >= 50 ~ "50+"
      )
    ) |>
    filter(!is.na(age_group))

  # get statistics
  mean_vals <- age_data |> group_by(age_group) |> summarise(val = mean(Q1, na.rm = TRUE)) |> deframe()
  median_vals <- age_data |> group_by(age_group) |> summarise(val = median(Q1, na.rm = TRUE)) |> deframe()
  mode_vals <- age_data |> group_by(age_group) |> summarise(val = as.numeric(names(sort(table(Q1), decreasing = TRUE)[1]))) |> deframe()

  # return corresponding block
  if (input$stat_summary == "Mean") {
    return(
      tags$div(
        tags$p("The mean Q1 score by age group:"),
        tags$ul(
          tags$li("15â€“29: ", round(mean_vals["15â€“29"], 2)),
          tags$li("30â€“49: ", round(mean_vals["30â€“49"], 2)),
          tags$li("50+: ", round(mean_vals["50+"], 2))
        )
      )
    )
  }

  if (input$stat_summary == "Median") {
    return(
      tags$div(
        tags$p("The median Q1 score by age group:"),
        tags$ul(
          tags$li("15â€“29: ", round(median_vals["15â€“29"], 2)),
          tags$li("30â€“49: ", round(median_vals["30â€“49"], 2)),
          tags$li("50+: ", round(median_vals["50+"], 2))
        )
      )
    )
  }

  if (input$stat_summary == "Mode") {
    return(
      tags$div(
        tags$p("The most common Q1 score by age group:"),
        tags$ul(
          tags$li("15â€“29: ", mode_vals["15â€“29"]),
          tags$li("30â€“49: ", mode_vals["30â€“49"]),
          tags$li("50+: ", mode_vals["50+"])
        )
      )
    )
  }
})

```

### **By Region**

```{r}
# region pct
region_pct <- full_data |> 
  filter(Q1 %in% c(1, 2, 3, 4, 98), !is.na(region)) |> 
  mutate(
    knowledge_level = case_when(
      Q1 == 1 ~ "A lot",
      Q1 == 2 ~ "Some",
      Q1 == 3 ~ "Not much",
      Q1 %in% c(4, 98) ~ "Nothing at all / Donâ€™t know"
    )
  ) |>
  group_by(region, knowledge_level) |>
  summarise(n = n(), .groups = "drop") |>
  group_by(region) |>
  mutate(percent = n / sum(n) * 100)

# global pct
global_pct <- full_data |> 
  filter(Q1 %in% c(1, 2, 3, 4, 98)) |> 
  mutate(
    knowledge_level = case_when(
      Q1 == 1 ~ "A lot",
      Q1 == 2 ~ "Some",
      Q1 == 3 ~ "Not much",
      Q1 %in% c(4, 98) ~ "Nothing at all / Donâ€™t know"
    )
  ) |>
  group_by(knowledge_level) |>
  summarise(n = n(), .groups = "drop") |>
  mutate(
    percent = n / sum(n) * 100,
    region = "World"
  )

# bind 
knowledge_all <- bind_rows(region_pct, global_pct)

# order levels
knowledge_all <- knowledge_all |> 
  mutate(
    knowledge_level = factor(
      knowledge_level,
      levels = c("A lot", "Some", "Not much", "Nothing at all / Donâ€™t know")
    )
  )

# custom colors (modified from previous plot)
custom_colors <- c(
  "A lot" = "#4292c6",                     
  "Some" = "#6baed6",                     
  "Not much" = "#c6dbef",                 
  "Nothing at all / Donâ€™t know" = "#fbd47a" 
)

# plot
p <- ggplot(knowledge_all, aes(x = percent, y = region, fill = knowledge_level, text = paste0(
    "Region: ", region, "<br>",
    "Knowledge Level: ", knowledge_level, "<br>",
    "Percent: ", round(percent, 1), "%"
  )
)) +
  geom_col(width = 0.7, position = "stack") +
  scale_fill_manual(values = custom_colors) +
  labs(
    title = "Perceived Knowledge of Science by Region",
    x = "",
    y = "",
    fill = "Knowledge Level"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    panel.grid.minor = element_blank(),
    panel.grid.major.y = element_blank(),
    axis.text.x = element_blank(),
    axis.text.y = element_text(size = 12)
  )

# convert to plotly
ggplotly(p, tooltip = "text") |>
  layout(
    legend = list(
      orientation = "h",
      x = 0.5,
      y = 1.10,
      xanchor = "center",
      font = list(size = 13)
    ),
    margin = list(t = 100)
  )
```

# Data & Sources

## Data Preview

```{r}
#| title: Wellcome Global Monitor Report 2018 Data
new_df <- head(full_data, 100)
knitr::kable(new_df)
```

## About the Data {height="20%"}

::: card
### [ðŸ“Š Something about the Data](https://wellcome.org/reports/wellcome-global-monitor/2018)

The Wellcome Global Monitor 2018 surveyed over 140,000 people aged 15 and older in more than 140 countries to understand global attitudes toward science and health. The data was collected between April and December 2018 through in-person and phone interviews. The survey asked about trust in scientists and healthcare workers, interest in science, and opinions on vaccines.
:::
